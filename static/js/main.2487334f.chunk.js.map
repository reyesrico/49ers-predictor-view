{"version":3,"sources":["loading.gif","schedules.js","App.js","reportWebVitals.js","index.js"],"names":["schedule2021","week","team","isLocal","schedule2020","teamWin","getSchedules","year","console","log","currentYear","years","url","App","state","teams","predictions","schedule","isLoading","loadSchedule","setState","loadSchedulePredictions","length","promises","map","game","params","team_number","week_number","is_local","is_playoff","is_super_bowl","weather_wind","weather_humidity","axios","get","Promise","all","then","responses","response","data","predict","catch","error","finally","renderSchedule","results","forEach","p","allMatches","renderMatches","matches","filter","v","wins","g","className","idx","getTeam","renderResultWording","toLowerCase","toLocaleLowerCase","teamId","find","t","id","name","this","_","prevState","value","index","onChange","event","parseInt","target","y","src","loading","alt","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2487334f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.3c3afa39.gif\";","const schedule2021 = [\r\n  { week: 1, team: 10, isLocal: 0 },\r\n  { week: 2, team: 24, isLocal: 0 },\r\n  { week: 3, team: 11, isLocal: 1 },\r\n  { week: 4, team: 28, isLocal: 1 },\r\n  { week: 5, team: 25, isLocal: 0 },\r\n  { week: 7, team: 13, isLocal: 1 },\r\n  { week: 8, team: 5, isLocal: 0 },\r\n  { week: 9, team: 25, isLocal: 1 },\r\n  { week: 10, team: 16, isLocal: 1 },\r\n  { week: 11, team: 14, isLocal: 0 },\r\n  { week: 12, team: 18, isLocal: 1 },\r\n  { week: 13, team: 28, isLocal: 0 },\r\n  { week: 14, team: 6, isLocal: 0 },\r\n  { week: 15, team: 1, isLocal: 1 },\r\n  { week: 16, team: 30, isLocal: 0 },\r\n  { week: 17, team: 12, isLocal: 1 },\r\n  { week: 18, team: 16, isLocal: 0 }\r\n];\r\n\r\nconst schedule2020 = [\r\n  { week: 1, team: 25, isLocal: 1, teamWin: 0 },\r\n  { week: 2, team: 22, isLocal: 0, teamWin: 1 },\r\n  { week: 3, team: 21, isLocal: 0, teamWin: 1 },\r\n  { week: 4, team: 24, isLocal: 1, teamWin: 0 },\r\n  { week: 5, team: 17, isLocal: 1, teamWin: 0 },\r\n  { week: 6, team: 16, isLocal: 1, teamWin: 1 },\r\n  { week: 7, team: 19, isLocal: 0, teamWin: 1 },\r\n  { week: 8, team: 28, isLocal: 0, teamWin: 0 },\r\n  { week: 9, team: 11, isLocal: 1, teamWin: 0 },\r\n  { week: 10, team: 20, isLocal: 0, teamWin: 0 },\r\n  { week: 12, team: 16, isLocal: 0, teamWin: 1 },\r\n  { week: 13, team: 3, isLocal: 1, teamWin: 0 },\r\n  { week: 14, team: 31, isLocal: 1, teamWin: 0 },\r\n  { week: 15, team: 8, isLocal: 0, teamWin: 0 },\r\n  { week: 16, team: 25, isLocal: 0, teamWin: 1 },\r\n  { week: 17, team: 28, isLocal: 1, teamWin: 0 }\r\n];\r\n\r\nconst getSchedules = year => {\r\n  console.log({ year });\r\n  switch(year) {\r\n    case 2021:\r\n      return schedule2021;\r\n    case 2020: \r\n      return schedule2020;\r\n    default:\r\n      return schedule2021;\r\n  }\r\n};\r\n\r\nexport default getSchedules;\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport loading from './loading.gif';\nimport getSchedules from './schedules';\n\nimport './App.css';\n\nconst currentYear = 2021;\nconst years = [currentYear, 2020];\nconst url = 'https://reyesrico.pythonanywhere.com'\n\nclass App extends Component {\n  state = {\n    teams: [],\n    predictions: [],\n    schedule: [],\n    isLoading: false,\n    year: 2021\n  };\n\n  componentDidMount() {\n    this.loadSchedule();\n\n    axios.get(`${url}/teams`).then(response => {\n      this.setState({ teams: response.data.teams });\n    });\n  }\n\n  componentDidUpdate(_, prevState) {\n    if (this.state.teams !== prevState.teams || this.state.year !== prevState.year) {\n      this.loadSchedule();\n      this.loadSchedulePredictions();\n    }\n  }\n\n  loadSchedule = () => {\n    const { year } = this.state;\n    const schedule = getSchedules(year);\n    console.log({ schedule });\n    this.setState({ schedule });\n  }\n\n  loadSchedulePredictions = () => {\n    const { schedule } = this.state;\n    if (schedule.length) {\n      let promises = schedule.map(game => {\n        const params = {\n          team_number: game.team,\n          week_number: game.week,\n          is_local: game.isLocal,\n          is_playoff: 0,\n          is_super_bowl: 0,\n          weather_wind: 1,\n          weather_humidity: 52\n        };\n    \n        return axios.get(`${url}/predict`, params);\n      });\n  \n      console.log('PREDICTING');\n      this.setState({ isLoading: true });\n      Promise.all(promises)\n      .then(responses => {\n        let predictions = responses.map(response => (response.data.predict) ? 1 : 0);\n        this.setState({ predictions });\n      })\n      .catch(error => console.log(error))\n      .finally(() => {\n        console.log('FINISHED PREDICTING');\n        this.setState({ isLoading: false });\n      });  \n    }\n  }\n\n  renderResultWording(value) {\n    return value ? \"Win\" : \"Lose\";\n  }\n\n  renderMatches(predictions, schedule) {\n    return schedule.map((game, index) => (predictions[index] === game.teamWin) ? 1 : 0);\n  }\n\n  renderSchedule = () => {\n    const { schedule, predictions, year } = this.state;\n    let results = [0, 0];\n\n    if (schedule.length && predictions.length) {\n      predictions.forEach(p => (!!p) ? results[0]++ : results[1]++);\n      let allMatches = year !== currentYear ? this.renderMatches(predictions, schedule) : [];\n      let matches = allMatches.filter(v => v === 1).length;\n      let wins = year !== currentYear ? schedule.filter(g => g.teamWin === 1).length : 0;\n\n      return (\n        <div>\n          <div className=\"app__summary\">\n            <span>Wins: {results[0]}</span>\n            <span>Losses: {results[1]}</span>\n            {year !== currentYear && (<span>\n              Matches: {matches} - Reliability: {matches/(allMatches.length)*100}%\n            </span>)}\n            {year !== currentYear && (<span>\n              Predicted Wins: {results[0]} - Real Wins: {wins}\n            </span>)}\n          </div>\n          <div className=\"app__game\">\n            <div className=\"app__week app__game-header\">Week</div>\n            <div className=\"app__team app__game-header\">Team</div>\n            <div className=\"app__local app__game-header\">49ers Local</div>\n            <div className=\"app__win app__game-header\">49ers will win?</div>\n            {year !== currentYear && <div className=\"app__result app__game-header\">49ers DID WIN?</div>}\n            {year !== currentYear && <div className=\"app__match app__game-header\">Predictor Matched?</div>}\n          </div>\n          { schedule.map((game, idx) => {\n              return (\n                <div className=\"app__game\">\n                  <div className=\"app__week\">{game.week}</div>\n                  <div className=\"app__team\">{this.getTeam(game.team)}</div>\n                  <div className=\"app__local\">{game.isLocal? \"Yes\" : \"No\"}</div>\n                  <div className={`app__win app__game-${this.renderResultWording(predictions[idx]).toLowerCase()}`}>\n                    {this.renderResultWording(predictions[idx])}\n                  </div>\n                  {year !== currentYear && <div className={`app__result app__game-${this.renderResultWording(game.teamWin).toLocaleLowerCase()}`}>\n                    {this.renderResultWording(game.teamWin)}\n                  </div>}\n                  {year !== currentYear && <div className={`app__match app__game-${this.renderResultWording(allMatches[idx]).toLocaleLowerCase()}`}>\n                    {allMatches[idx] ? 'Matched' : \"No Match\"}\n                  </div>}\n                </div>\n              );\n          })}\n        </div>\n      );  \n    }\n  }\n\n  getTeam = teamId => {\n    const { teams } = this.state;\n    let team = teams.find(t => t.id === teamId);\n    return team ? team.name : '';\n  }\n\n  render() {\n    const { isLoading, year } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__header\">49ers {year} Schedule Predictions</h1>\n        <hr></hr>\n        <div className=\"app__select-container\">\n          <span className=\"app__select-txt\">Select Year:</span>\n          <select className=\"app__select\" onChange={event => this.setState({ year: parseInt(event.target.value) })}>\n            { years.map(y=> {\n                return <option key={y} value={y}>{y}</option>\n            })}\n          </select>\n        </div>\n        <hr></hr>\n        <div className=\"app__content\">\n          {isLoading && <div className=\"app__img-container\"><img src={loading} className=\"app__img\" alt=\"loading\" /></div>}\n          {!isLoading && (\n            <div className=\"app__schedule\">\n              {this.renderSchedule()}\n            </div>\n          )}\n        </div>\n      </div>\n    );  \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}